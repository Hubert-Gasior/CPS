##Dany jest dyskretny system liniowy niezmienny w czasie, który jest opisany Z-transmitacją 𝐻(𝑧). 
##Transmitancja 𝐻(𝑧) jest zdefiniowana poprzez dwa wektory 𝑏=[𝑏0,𝑏1,…,𝑏𝑀]∈𝑅𝑀+1 oraz 𝑎=[𝑎0,𝑎1,…,𝑎𝑁]∈𝑅𝑁+,
## które są odpowiednio współczynnikami wielomianu w liczniku i mianowniku funkcji wymiernej 𝐻(𝑧)
##Oblicz przesunięcie fazowe 𝜑(𝑓) tego systemu dla częstotliwości 𝑓∈𝑅
##znormalizowanej względem częstotliwości próbkowania. 
##Jako odpowiedź podaj średnie przesunięcie fazowe dla następujących częstotliwości 𝐹=[0.18,0.19,0.28,0.36, to znaczy,1/4∑𝑖=14𝜑(𝐹𝑖).

function rozwiazanie(;

    #wynik -0.09616578607280635, sredne przeneicie git -0.09616578607280617
    #b::Vector{Float64} = [0.6128614540607891, -1.58260342934254, 3.195979449260306, -3.5518767666233613, 3.195979449260306, -1.58260342934254, 0.6128614540607891],
    #a::Vector{Float64} = [1.0, -2.2057622722176737, 3.736461634671409, -3.494852945516927, 2.589357641327895, -1.0164684075738428, 0.291862530642888],
    #F::Vector{Float64} = [0.04, 0.2, 0.23, 0.39, 0.41, 0.43],

    ##wynik: 0.6884247989546458, git 0.6884247989546456 !!!! Oblicz wzmocnienie 𝐴(𝑓) tego systemu dla częstotliwości 𝑓∈𝑅 znormalizowanej względem częstotliwości próbkowania. Jako odpowiedź podaj średnie wzmocnienie dla następujących częstotliwości 𝐹=[0.17,0.4,0.41], to znaczy, 1/33A(Fi).
    #b::Vector{Float64} = [0.14057805413148808, -0.5496709567825141, 0.9813305379425469, -0.9813305379425469, 0.5496709567825141, -0.14057805413148805],
    #a::Vector{Float64} = [1.0, -0.7943952595790318, 0.9758046873511725, -0.4065474189933993, 0.14744644568906448, -0.018965286100430738],
    #F::Vector{Float64} = [0.17, 0.4, 0.41],

    # z - zera transmitacnji, p - bieguny transmitancji, k - wspolczynnik wzmocnienia, podac srednie przesunieice fazowe
    # wynik 2.1041142174748932 git 2.1041142174749004 
    #zz::Vector{ComplexF64} = ComplexF64[1.0 + 0.0im, 1.0 + 0.0im, 1.0 + 0.0im, -1.0 + 0.0im, -1.0 + 0.0im, -1.0 + 0.0im],
    #pp::Vector{ComplexF64} = ComplexF64[0.7062828118446747 - 0.6484776839534279im, 0.3958741555825379 + 0.8582299669671247im, 0.7062828118446747 + 0.6484776839534279im, 0.3958741555825379 - 0.8582299669671247im, 0.5445308115452272 - 0.719591589389158im, 0.5445308115452272 + 0.719591589389158im],
    #k::Float64 = 0.003457159486847785,
    #F::Vector{Float64} = [0.2, 0.2, 0.26, 0.42],

    #wynik 0.2902294651279125, srednie wzmonienie git 0.2902294651279068
    #b::Vector{Float64} = [0.002757034434661249, 0.0, -0.008271103303983746, 0.0, 0.008271103303983746, 0.0, -0.002757034434661249],
    #a::Vector{Float64} = [1.0, -2.073528022700252, 3.980982112169337, -3.9212815984659093, 3.5214519410126366, -1.6165796454036947, 0.6896607286372956],
    #F::Vector{Float64} = [0.05, 0.1, 0.19, 0.24],

    #wynik 0.41847835065460415, srednie przesuniecie fazowe git 0.41847835065460437
    #b::Vector{Float64} = [0.3098937918265392, -1.2395751673061568, 1.8593627509592352, -1.2395751673061568, 0.3098937918265392],
    #a::Vector{Float64} = [1.0, -1.8684239203399835, 1.7379343944338954, -0.7436787820592687, 0.21326775601466166],
    #F::Vector{Float64} = [0.09, 0.15, 0.32, 0.39, 0.43, 0.49],

    ##wynik -1.1922183854913784 podac srednia przesuniecia fazowego git 1.192218385491378
    #b::Vector{Float64} = [0.32535468302663495, -1.2048550136195828, 1.7633364025493095, -1.204855013619583, 0.32535468302663495],
    #a::Vector{Float64} = [1.0, -1.8859712694029567, 1.9319729717227352, -0.9336160382636693, 0.3211884722852104],
    #F::Vector{Float64} = [0.18, 0.19, 0.28, 0.36],

    #wynik -0.9348064381753346 git
    #b::Vector{Float64} = [0.0033628151286823936, 0.0, -0.013451260514729575, 0.0, 0.020176890772094364, 0.0, -0.013451260514729575, 0.0, 0.0033628151286823936],
    #a::Vector{Float64} = [1.0, -3.997443149598677, 8.589965542843466, -11.927124301563602, 11.721051782529203, -8.202374299873538, 4.055417786438518, -1.291301048248024, 0.22281157292013481],
    #F::Vector{Float64} = [0.05, 0.06, 0.16, 0.19, 0.35],

    #wynik 
    #zz::Vector{ComplexF64} = ComplexF64[0.8267009699191107 + 0.5626415433780213im, 0.8267009699191107 - 0.5626415433780213im, 0.8267009699191107 + 0.5626415433780213im, 0.8267009699191107 - 0.5626415433780213im, 0.8267009699191107 + 0.5626415433780213im, 0.8267009699191107 - 0.5626415433780213im, 0.8267009699191107 + 0.5626415433780213im, 0.8267009699191107 - 0.5626415433780213im, 0.8267009699191107 + 0.5626415433780213im, 0.8267009699191107 - 0.5626415433780213im, 0.8267009699191107 + 0.5626415433780213im, 0.8267009699191107 - 0.5626415433780213im],
    #pp::Vector{ComplexF64} = ComplexF64[0.5589886755585987 - 0.8062544868895222im, 0.9288549142281305 + 0.34792579607590607im, 0.5589886755585987 + 0.8062544868895222im, 0.9288549142281305 - 0.34792579607590607im, 0.4160729842751447 - 0.8091701405090437im, 0.9234636216371498 + 0.2917948530367888im, 0.4160729842751447 + 0.8091701405090437im, 0.9234636216371498 - 0.2917948530367888im, -0.06760378344940732 - 0.5787509155760695im, 0.9087477040627734 + 0.13633735556786725im, -0.06760378344940732 + 0.5787509155760695im, 0.9087477040627734 - 0.13633735556786725im],
    #k::Float64 = 0.17551794448682773,
    #F::Vector{Float64} = [0.01, 0.33, 0.34, 0.36, 0.42],   

    #wynik faza
    #zz::Vector{ComplexF64} = ComplexF64[-1.0 + 0.0im, -1.0 + 0.0im, -1.0 + 0.0im, -1.0 + 0.0im, -1.0 + 0.0im, -1.0 + 0.0im],
    #pp::Vector{ComplexF64} = ComplexF64[0.9095773188384673 + 0.35762916802244354im, 0.9095773188384673 - 0.35762916802244354im, 0.9028635665546024 + 0.2556906812795575im, 0.9028635665546024 - 0.2556906812795575im, 0.910698963795748 + 0.09290721429281681im, 0.910698963795748 - 0.09290721429281681im],
    #k::Float64 = 2.3542493249843624e-6,
    #F::Vector{Float64} = [0.06, 0.13, 0.21, 0.47, 0.5],

    #wynik faza  git
    #zz::Vector{ComplexF64} = ComplexF64[0.992185634224426 + 0.12477045819693698im, 0.992185634224426 - 0.12477045819693698im, 0.992185634224426 + 0.12477045819693698im, 0.992185634224426 - 0.12477045819693698im, 0.992185634224426 + 0.12477045819693698im, 0.992185634224426 - 0.12477045819693698im, 0.992185634224426 + 0.12477045819693698im, 0.992185634224426 - 0.12477045819693698im, 0.992185634224426 + 0.12477045819693698im, 0.992185634224426 - 0.12477045819693698im, 0.992185634224426 + 0.12477045819693698im, 0.992185634224426 - 0.12477045819693698im],
    #pp::Vector{ComplexF64} = ComplexF64[0.9351000423617635 - 0.3258982636846469im, 0.9975547914174092 + 0.046219097363159684im, 0.9351000423617635 + 0.3258982636846469im, 0.9975547914174092 - 0.046219097363159684im, 0.8675885391287428 - 0.38900844398710555im, 0.9949029376404857 + 0.035973274871651244im, 0.8675885391287428 + 0.38900844398710555im, 0.9949029376404857 - 0.035973274871651244im, 0.4542414684453971 - 0.5078988046040958im, 0.9923656844311125 + 0.014228929669798732im, 0.4542414684453971 + 0.5078988046040958im, 0.9923656844311125 - 0.014228929669798732im],
    #k::Float64 = 0.3712226738349649,
    #F::Vector{Float64} = [0.01, 0.1, 0.24, 0.34],

    #wynik faza git
    #zz::Vector{ComplexF64} = ComplexF64[-1.0 + 0.0im, -1.0 + 0.0im, -1.0 + 0.0im, -1.0 + 0.0im],
    #pp::Vector{ComplexF64} = ComplexF64[0.5138178437164289 + 0.5384480243052013im, 0.5138178437164289 - 0.5384480243052013im, 0.3906125662833166 + 0.16955286433961225im, 0.3906125662833166 - 0.16955286433961225im],
    #k::Float64 = 0.013160813540572821,
    #F::Vector{Float64} = [0.15, 0.28, 0.35, 0.48],

    #wynik git
    b::Vector{Float64} = [0.006157162658076966, -0.03129569309345338, 0.09481154824693733, -0.2008606047620769, 0.3317744059440209, -0.440525761591387, 0.4842782823030848, -0.440525761591387, 0.33177440594402074, -0.20086060476207684, 0.09481154824693731, -0.03129569309345336, 0.006157162658076963],
    a::Vector{Float64} = [1.0, -5.3902906047044965, 17.145305167299856, -37.188353339479946, 61.2585278933829, -78.67209718248131, 81.04187274604377, -66.81775993179158, 44.18610929081598, -22.777806676539583, 8.916502101290128, -2.3795356066315185, 0.3749420847476254],
    F::Vector{Float64} = [0.03, 0.09, 0.16, 0.22, 0.28],
)
    ###### do zz pp
#    function conv(f1::AbstractVector, f2::AbstractVector)::Vector
#        F1 = length(f1)
#        F2 = length(f2)
##        y = zeros(eltype(f1), F1 + F2 - 1)
 #       for i in 1:F1
#            for j in 1:F2
#                y[i+j-1] += f1[i] * f2[j]
#            end
#        end
#        return y
#    end
#
 #   function poly(r::AbstractVector)
  #      p = [1.0 + 0im]
   #     for i in eachindex(r)
#            p = conv(p, [1,-r[i]])
#        end
#        return p
#    end
#    
#    a = poly(pp)
#    b = poly(zz) .* k
    ######
    
    B = length(b)
    f = length(F)
    h = zeros(Complex, f)
    h1 = zeros(Complex, f)
    h2 = zeros(Complex, f)
    x = 0

    for i in 1:f
        for m in 1:B-1
            h1[i] += b[m+1]*exp(-im*2*π*F[i]*m)
            h2[i] += a[m+1]*exp(-im*2*π*F[i]*m)
        end
        h[i] = (b[1]+h1[i])/(a[1]+h2[i])

        x += angle(h[i])
        #x += abs(h[i])
    end
    
    return x/f
end

println(rozwiazanie())