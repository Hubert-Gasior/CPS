## Dany jest idealny r√≥wnomierny 9-bitowy kwantyzator ùëû(ùë•), kt√≥rego najmniejszy poziom kwantyzacji ma warto≈õƒá ùëé=‚àí0.6, 
## natomist najwiƒôkszy poziom kwantyzacji ma warto≈õƒá ùëè=0.98. Oblicz sygna≈Ç b≈Çƒôdu kwantyzacji tego przetwornika dla dyskretnego sygna≈Çu ùë•‚ààùëÖ92. 
## Jako rozwiƒÖzanie podaj moc sygna≈Çu b≈Çƒôdu kwantyzacji.

function rozwiazanie(;
    ##wynik: 0.0972000982899942 !!!!!!!!!!! 5 Bitowy
    a::Float64 = -6.4,
    b::Float64 = 4.0,
    x::Vector{Float64} = [-1.28648, -1.23201, -1.16555, -1.05979, -0.99513, -0.93964, -0.83594, -0.75867, -0.71055, -0.61406, -0.52393, -0.47814, -0.39297, -0.29197, -0.24284, -0.17125, -0.06341, -0.00556, 0.05244, 0.1616, 0.23241, 0.27923, 0.38353, 0.46956, 0.50983, 0.60334, 0.7044, 0.74442, 0.82246, 0.93563, 0.98255, 1.04258, 1.16237, 1.22318, 1.26544, 1.38429, 1.46475, 1.49269, 1.60167, 1.7053, 1.72564, 1.81546, 1.94265, 1.96518, 2.02719, 2.17446, 2.21184, 2.23887, 2.3982, 2.466, 2.45297, 2.61052, 2.72878, 2.67268, 2.80473, 3.00506, 2.90409, 2.95784, 3.31994, 3.1787, 2.87322, 4.00517, -6.21982, -5.8184, -6.37712, -6.2623, -5.90563, -5.99876, -6.00949, -5.7603, -5.72675],

    ## wynik: 9.460910289351858e-5 6 BITOWY!!!!!!!!!!!!!!
    ##a::Float64 = -1.0,
    ##b::Float64 = 1.1,
    ##x::Vector{Float64} = [-0.91974, -0.82178, -0.74856, -0.63922, -0.56698, -0.46039, -0.38318, -0.28305, -0.19843, -0.10619, -0.01365, 0.07109, 0.17029, 0.24962, 0.35257, 0.43021, 0.53234, 0.61392, 0.70791, 0.80439, 0.86758, 1.13016, -0.88149, -0.86252, -0.73633, -0.66683, -0.565, -0.47885, -0.38966, -0.29375, -0.21183, -0.11099, -0.03171, 0.0695, 0.15063, 0.24788, 0.33496, 0.42439, 0.52104, 0.59914, 0.70919, 0.77066, 0.90515, 0.89921, -0.97433, -0.84582, -0.75747, -0.67518, -0.57215, -0.49603, -0.39131, -0.31384, -0.21274, -0.12994, -0.0354, 0.05473, 0.14162, 0.23927, 0.31924, 0.42274, 0.49841, 0.60409, 0.68051, 0.78096, 0.8717, 0.91279, -0.99682, -0.83784, -0.78628, -0.66863, -0.59739, -0.49438, -0.41073, -0.3186, -0.22549, -0.1413, -0.04195, 0.03788, 0.13955, 0.21925, 0.31876, 0.40299, 0.49548, 0.58945, 0.66891, 0.78075, 0.83234, 1.01317, -0.87667, -0.89061, -0.77439, -0.691, -0.60285, -0.50468, -0.42511, -0.32239],

    ## Prawid≈Çowe rozwiƒÖzanie tego problemu to 0.003836608651086957. zle wozniak
    ##a::Float64 = -0.6,
    ##b::Float64 = 0.98,
    ##x::Vector{Float64} = [0.488, 0.38948, 0.29096, 0.19245, 0.09393, -0.00459, -0.10311, -0.20162, -0.30014, -0.39866, -0.49718, -0.59569, -0.50579, -0.40727, -0.30875, -0.21023, -0.11172, -0.0132, 0.08532, 0.18384, 0.28235, 0.38087, 0.47939, 0.57791, 0.67642, 0.77494, 0.87346, 0.97198, 0.92951, 0.83099, 0.73247, 0.63395, 0.53543, 0.43692, 0.3384, 0.23988, 0.14136, 0.04285, -0.05567, -0.15419, -0.25271, -0.35122, -0.44974, -0.54826, -0.55322, -0.4547, -0.35619, -0.25767, -0.15915, -0.06063, 0.03788, 0.1364, 0.23492, 0.33344, 0.43195, 0.53047, 0.62899, 0.72751, 0.82603, 0.92454, 0.97694, 0.87842, 0.7799, 0.68139, 0.58287, 0.48435, 0.38583, 0.28732, 0.1888, 0.09028, -0.00824, -0.10675, -0.20527, -0.30379, -0.40231, -0.50083, -0.59934, -0.50214, -0.40362, -0.3051, -0.20659, -0.10807, -0.00955, 0.08897, 0.18748, 0.286, 0.38452, 0.48304, 0.58156, 0.68007, 0.77859, 0.87711],
)
    
    LSB = (b-a)/2^5
    l = length(x)

    kopia = zeros(l)
    for i in 1:l
        kopia[i] = x[i]
    end

    for i in 1:l
            kopia[i] = round(kopia[i]/LSB)*LSB
    end

    error = zeros(l)
    for i in 1:l
        error[i] = kopia[i]-x[i]
    end

    suma = (1/(l+1))*sum((error).^2)
    return suma
end

println(rozwiazanie())


##wynik: 9.904304536061193e-5
##a::Float64 = -2.9,
##b::Float64 = 0.29,
##x::Vector{Float64} = [-1.3, -1.09937, -0.89875, -0.69812, -0.49749, -0.29687, -0.09624, 0.10439, 0.29498, 0.09436, -0.10627, -0.3069, -0.50752, -0.70815, -0.90878, -1.1094, -1.31003, -1.51066, -1.71129, -1.91191, -2.11254, -2.31317, -2.51379, -2.71442, -2.88495, -2.68433, -2.4837, -2.28307, -2.08245, -1.88182, -1.68119, -1.48056, -1.27994, -1.07931, -0.87868, -0.67806, -0.47743, -0.2768, -0.07618, 0.12445, 0.27492, 0.07429, -0.12633, -0.32696, -0.52759, -0.72821, -0.92884, -1.12947, -1.33009, -1.53072, -1.73135, -1.93197, -2.1326, -2.33323, -2.53386, -2.73448, -2.86489, -2.66426, -2.46364, -2.26301, -2.06238],
